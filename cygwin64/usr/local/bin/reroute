#!/bin/bash

#
# routeadd: add Rackspace network segments to Windows routing table.
#
# Options:
#   -d -- delete all previously added routes from routing table
#

. "/usr/local/lib/net.sh"

usage()
{
  echo "Usage:" >&2
  echo "  reroute [-l LOG]" >&2
  echo "  reroute -d [-l LOG]" >&2
  echo "  reroute -h" >&2
  echo "" >&2
  echo "Options:" >&2
  echo "  -d        Delete all routes" >&2
  echo "  -h        This help screen" >&2
  echo "  -l LOG    Log output from route commands to file LOG" >&2
}

_log=/dev/null
declare -i _delete=1
while getopts "dhl:" opt; do
  case $opt in
     d) _delete=0;;
     h) usage; exit 0;;
     l) _log="$OPTARG"; echo "Logging to $_log.";;
  esac
done
shift $(( $OPTIND - 1 ))

_gateway=$(ipconfig | grep -A 3 'VPN' | grep IPv4 | cut -d ':' -f 2 | cut -d ' ' -f 2)
_weight=54
if [ -z "${_gateway}" ]; then
  echo "Could not find gateway!" >&2
  exit 1
else
  echo "Gateway: $_gateway"
fi

routeadd()
{
  route add "$1" MASK "$2" "$_gateway" METRIC $_weight > $_log 2>&1
  result=$?
  if [ $result -eq 0 ]; then
    echo "Successfully added route for [$3]. "
  else
    echo "Failed to add route for [$3]!"
  fi
}

routeremove()
{
  route delete "$1" > $_log 2>&1
  result=$?
  if [ $result -eq 0 ]; then
    echo "Successfully removed route for [$2]."
  else
    echo "Failed to remove route for [$2]!"
  fi
}

#declare -A routes=(
#  [inside]='([name]="Inside Segment" [ip]="172.20.100.0" [mask]="255.255.255.0")'
#  [bal001]='([name]="Balancer"       [ip]="172.20.119.0" [mask]="255.255.255.0")'
#  [dmz001]='([name]="DMZ Web"        [ip]="172.20.120.0" [mask]="255.255.252.0")'
#  [dmz002]='([name]="DMZ FTP"        [ip]="172.20.124.0" [mask]="255.255.252.0")'
#  [svc001]='([name]="ServiceNet 1"   [ip]="10.176.0.0"   [mask]="255.240.0.0")'
#  [svc002]='([name]="ServiceNet 2"   [ip]="10.208.0.0"   [mask]="255.240.0.0")'
#)
declare -A routes=(
  [inside]='([name]="Inside Segment" [cidr]="172.20.100.0/24" )'
  [bal001]='([name]="Balancer"       [cidr]="172.20.119.0/24" )'
  [dmz001]='([name]="DMZ Web"        [cidr]="172.20.120.0/22" )'
  [dmz002]='([name]="DMZ FTP"        [cidr]="172.20.124.0/22" )'
  [svc001]='([name]="ServiceNet 1"   [cidr]="10.176.0.0/13"   )'
  [svc002]='([name]="ServiceNet 2"   [cidr]="10.184.0.0/13"   )'
  [svc003]='([name]="ServiceNet 3"   [cidr]="10.208.0.0/12"   )'
  [clxbe1]='([name]="Clustrix BE 1"  [cidr]="10.242.73.192/26")'
)

for rt in "${!routes[@]}"; do
  #echo "ref  = ${rt}"
  declare -A "${rt}AA=${routes[$rt]}"
  for key in name cidr; do
    eval ${key}'=${'${rt}'AA['$key']}'
  done
  suffix="${cidr#*/}"
  ip="${cidr%/*}"
  mask=`cidr2mask $suffix`
  if [ $_delete -ne 0 ]; then
    routeadd "$ip" "$mask" "$name"
  else
    routeremove "$ip" "$name"
  fi
done

exit 0

