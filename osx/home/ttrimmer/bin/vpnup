#!/usr/bin/env bash

## Config
DOMAIN="${DOMAIN:-virginpulse.okta.com}"
SERVICE="${SERVICE-NA Engineering VPN}"


## Derived
okta_user=$(echo "${USER}" | tr A-Z a-z)
service_key=$(echo "${SERVICE}" | tr "A-Z " "a-z.")


## Input
echo -n "Okta: "
read okta_code


## Keychain passwords
get-keychain-password() {
  label="$1"
  key="$2"
  [ -z "${label}" ] && return 1
  [ -z "${key}" ] && return 1
  lpass="$(security find-internet-password -a "${USER}" -s "${key}" -w )"
  if [ $? -ne 0 ] || [ -z "${lpass}" ]; then
    echo "Put your "${label}" password in your keychain with:" >&2
    echo '' >&2
    echo "  security add-internet-password -a \"\${USER}\" -s \"${key}\" -w \"YourPassword\"" >&2
    echo '' >&2
    return 1
  fi
  echo "${lpass}"
}

shared="$(get-keychain-password "VPN" "${service_key}")"
[ $? -ne 0 ] && exit 1
pass="$(get-keychain-password "Okta" "${DOMAIN}")"
[ $? -ne 0 ] && exit 1


## Full Okta password to clipboard
full="${pass},${okta_code}"
#old="$(pbpaste)"
#echo -n "${full}" | pbcopy


## CLI automation
cli_it() {
  scutil --nc start "${SERVICE}" --secret "${shared}" --user "${okta_user}" --password "${full}"

  for i in $(seq 1 5); do
    sleep 3
    if [ "$(scutil --nc status "${SERVICE}" | head -n1)" = "Connected" ]; then
      ${HOME}/bin/vpnroute
      echo "Routes added."
      return
    fi
  done

  echo "Tired of waiting for ${SERVICE}"
}


## GUI Automation
handle_prompt() {
  okta_user="${okta_user}" nwrk="${nwrk}" osascript <<EOF
set okta_user to system attribute "okta_user"
set nwrk to system attribute "SERVICE"

tell application "System Events"
	tell current location of network preferences
    set svc to service nwrk
    connect svc
    delay 2

    tell application id "com.apple.systemevents"
      -- type Okta username
      keystroke okta_user
      delay 1
  
      -- advance to next inputbox
      keystroke tab
  
      -- paste clipboard contents into password box
      keystroke "v" using {command down}
      delay 1
  
      -- press "Enter"
      keystroke (key code 36)
    end tell
  end tell
end tell
EOF
}


## Main
cli_it
#handle_prompt


## Restore clipboard
#echo "${old}" | pbcopy

